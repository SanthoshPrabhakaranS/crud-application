{"ast":null,"code":"var _jsxFileName = \"/home/santhosh/Documents/workout-files/crud-app/crud-application/src/components/form/AddNetworkModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container } from \"@mui/material\";\nimport { AddFormBtn, FormBtnDiv, FormNetwork, Header, Inputs, Label, Span, Svg, TextArea } from \"../../Task.styles/AddNetworkModal.styles\";\nimport { addNetwork, updateNetwork } from \"../features/networkDataSlice\";\nimport { closeNetworkModal } from \"../features/NetworkModalSlice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNetworkModal = _ref => {\n  _s();\n\n  let {\n    createOpen,\n    editNetwork\n  } = _ref;\n  const dispatch = useDispatch();\n  const networkId = uuidv4().slice(0, 4);\n  const [submitted, setSubmitted] = useState(false);\n  const initialId = editNetwork ? editNetwork.id : \"\";\n  const initialNetworkName = editNetwork ? editNetwork.networkName : \"\";\n  const initialDescription = editNetwork ? editNetwork.description : \"\";\n  const [values, setValues] = useState({\n    networkName: initialNetworkName,\n    description: initialDescription\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (values.networkName === \"\") {\n      setSubmitted(true);\n    } else if (values.description === \"\") {\n      setSubmitted(true);\n    } else if (createOpen) {\n      dispatch(addNetwork({\n        id: networkId,\n        networkName: values.networkName,\n        description: values.description\n      }));\n      dispatch(closeNetworkModal());\n    } else if (editNetwork) {\n      dispatch(updateNetwork({\n        id: initialId,\n        networkName: values.networkName,\n        description: values.description\n      }));\n      dispatch(closeNetworkModal());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"100vw\",\n      sx: {\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#0000006e\",\n        zIndex: \"999\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormNetwork, {\n        style: {\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [createOpen ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create new network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Edit network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(Svg, {\n            onClick: () => dispatch(closeNetworkModal()),\n            style: {\n              height: \"20px\",\n              width: \"20px\",\n              margin: \"2px 20px 0 0\",\n              cursor: \"pointer\"\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            strokeWidth: 2,\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"7px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"network-name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n            type: \"text\",\n            id: \"network-name\",\n            placeholder: \"New network\",\n            value: values.networkName,\n            onChange: e => setValues({ ...values,\n              networkName: e.target.value\n            }),\n            isInvalid: submitted && !values.networkName ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), submitted && !values.networkName ? /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Name required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"7px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"discription\",\n            rows: \"4\",\n            cols: \"50\",\n            placeholder: \"Enter Description\",\n            value: values.description,\n            onChange: e => setValues({ ...values,\n              description: e.target.value\n            }),\n            isInvalid: submitted && !values.description ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), submitted && !values.description ? /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Description required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormBtnDiv, {\n          children: [/*#__PURE__*/_jsxDEV(AddFormBtn, {\n            onClick: () => {\n              dispatch(closeNetworkModal());\n            },\n            backgroundColor: \"#fff\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddFormBtn, {\n            onClick: submitHandler,\n            backgroundColor: \"#16830d\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddNetworkModal, \"Mik2JE4ZonrrDjulkANjLsbyyy8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddNetworkModal;\nexport default AddNetworkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNetworkModal\");","map":{"version":3,"names":["React","useState","Container","AddFormBtn","FormBtnDiv","FormNetwork","Header","Inputs","Label","Span","Svg","TextArea","addNetwork","updateNetwork","closeNetworkModal","v4","uuidv4","useDispatch","AddNetworkModal","createOpen","editNetwork","dispatch","networkId","slice","submitted","setSubmitted","initialId","id","initialNetworkName","networkName","initialDescription","description","values","setValues","submitHandler","e","preventDefault","position","top","left","width","height","display","flexDirection","alignItems","justifyContent","backgroundColor","zIndex","padding","margin","cursor","gap","target","value"],"sources":["/home/santhosh/Documents/workout-files/crud-app/crud-application/src/components/form/AddNetworkModal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container } from \"@mui/material\";\r\nimport {\r\n  AddFormBtn,\r\n  FormBtnDiv,\r\n  FormNetwork,\r\n  Header,\r\n  Inputs,\r\n  Label,\r\n  Span,\r\n  Svg,\r\n  TextArea,\r\n} from \"../../Task.styles/AddNetworkModal.styles\";\r\nimport { addNetwork, updateNetwork } from \"../features/networkDataSlice\";\r\nimport { closeNetworkModal } from \"../features/NetworkModalSlice\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddNetworkModal = ({ createOpen, editNetwork }) => {\r\n  const dispatch = useDispatch();\r\n  const networkId = uuidv4().slice(0, 4);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const initialId = editNetwork ? editNetwork.id : \"\";\r\n  const initialNetworkName = editNetwork ? editNetwork.networkName : \"\";\r\n  const initialDescription = editNetwork ? editNetwork.description : \"\";\r\n\r\n  const [values, setValues] = useState({\r\n    networkName: initialNetworkName,\r\n    description: initialDescription,\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (values.networkName === \"\") {\r\n      setSubmitted(true);\r\n    } else if (values.description === \"\") {\r\n      setSubmitted(true);\r\n    } else if (createOpen) {\r\n      dispatch(\r\n        addNetwork({\r\n          id: networkId,\r\n          networkName: values.networkName,\r\n          description: values.description,\r\n        })\r\n      );\r\n      dispatch(closeNetworkModal());\r\n    } else if (editNetwork) {\r\n      dispatch(\r\n        updateNetwork({\r\n          id: initialId,\r\n          networkName: values.networkName,\r\n          description: values.description,\r\n        })\r\n      );\r\n      dispatch(closeNetworkModal());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        maxWidth=\"100vw\"\r\n        sx={{\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#0000006e\",\r\n          zIndex: \"999\",\r\n        }}\r\n      >\r\n        <FormNetwork style={{ padding: \"1rem\" }}>\r\n          <Header>\r\n            {createOpen ? <p>Create new network</p> : <p>Edit network</p>}\r\n            <Svg\r\n              onClick={() => dispatch(closeNetworkModal())}\r\n              style={{\r\n                height: \"20px\",\r\n                width: \"20px\",\r\n                margin: \"2px 20px 0 0\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </Svg>\r\n          </Header>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"7px\" }}>\r\n            <Label htmlFor=\"network-name\">Name</Label>\r\n            <Inputs\r\n              type=\"text\"\r\n              id=\"network-name\"\r\n              placeholder=\"New network\"\r\n              value={values.networkName}\r\n              onChange={(e) =>\r\n                setValues({ ...values, networkName: e.target.value })\r\n              }\r\n              isInvalid={submitted && !values.networkName ? true : false}\r\n            />\r\n            {submitted && !values.networkName ? (\r\n              <Span>Name required</Span>\r\n            ) : null}\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"7px\" }}>\r\n            <Label htmlFor=\"description\">Description</Label>\r\n            <TextArea\r\n              id=\"discription\"\r\n              rows=\"4\"\r\n              cols=\"50\"\r\n              placeholder=\"Enter Description\"\r\n              value={values.description}\r\n              onChange={(e) =>\r\n                setValues({ ...values, description: e.target.value })\r\n              }\r\n              isInvalid={submitted && !values.description ? true : false}\r\n            ></TextArea>\r\n            {submitted && !values.description ? (\r\n              <Span>Description required</Span>\r\n            ) : null}\r\n          </div>\r\n          <FormBtnDiv>\r\n            <AddFormBtn\r\n              onClick={() => {\r\n                dispatch(closeNetworkModal());\r\n              }}\r\n              backgroundColor=\"#fff\"\r\n            >\r\n              Cancel\r\n            </AddFormBtn>\r\n            <AddFormBtn onClick={submitHandler} backgroundColor=\"#16830d\">\r\n              Save\r\n            </AddFormBtn>\r\n          </FormBtnDiv>\r\n        </FormNetwork>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNetworkModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}