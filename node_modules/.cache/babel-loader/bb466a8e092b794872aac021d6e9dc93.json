{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet initialState = [{\n  id: '1',\n  username: 'Santhosh',\n  role: 'Super-admin',\n  status: 'Active',\n  password: '123',\n  confirmPassword: '123',\n  data: '12345',\n  image: 'https://websta.me/wp-content/uploads/2020/11/Chevron-1024x1024.jpg'\n}];\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const {\n        id,\n        username,\n        role,\n        status,\n        password,\n        confirmPassword,\n        data,\n        image\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        existingUser.username = username;\n        existingUser.role = role;\n        existingUser.status = status;\n        existingUser.password = password;\n        existingUser.confirmPassword = confirmPassword;\n        existingUser.data = data;\n        existingUser.image = image;\n      }\n    },\n    deleteUser: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        return state.filter(user => user.id !== id);\n      }\n    },\n    sortingUser: (state, action) => {\n      if ('ASC' === action.payload) {\n        console.log('Ascending Done');\n        console.log(initialState);\n        const sorted = [...initialState].sort((a, b) => a.username.toLowerCase() > b.username.toLowerCase() ? 1 : -1);\n        initialState = sorted;\n        console.log(initialState);\n      }\n    }\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  addUser,\n  editUser,\n  deleteUser,\n  updateUser,\n  sortingUser\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","initialState","id","username","role","status","password","confirmPassword","data","image","userSlice","name","reducers","addUser","state","action","push","payload","updateUser","existingUser","find","user","deleteUser","filter","sortingUser","console","log","sorted","sort","a","b","toLowerCase","reducer","editUser","actions"],"sources":["/home/santhosh/Documents/workout-files/crud-app/crud-application/src/components/features/userDataSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nlet initialState = [{\r\n    id:'1',\r\n    username:'Santhosh',\r\n    role:'Super-admin',\r\n    status:'Active',\r\n    password:'123',\r\n    confirmPassword:'123',\r\n    data:'12345',\r\n    image:'https://websta.me/wp-content/uploads/2020/11/Chevron-1024x1024.jpg'\r\n}]\r\n\r\nconst userSlice = createSlice({\r\n    name:'users',\r\n    initialState,\r\n    reducers: {\r\n        addUser: (state, action) => {\r\n            state.push(action.payload)\r\n        },\r\n        updateUser: (state, action) => {\r\n            const { id, username, role, status, password, confirmPassword, data, image } = action.payload\r\n            const existingUser = state.find(user => user.id === id)\r\n            if(existingUser){\r\n                existingUser.username = username\r\n                existingUser.role = role\r\n                existingUser.status = status\r\n                existingUser.password = password\r\n                existingUser.confirmPassword = confirmPassword\r\n                existingUser.data = data\r\n                existingUser.image = image\r\n            }\r\n\r\n        },\r\n        deleteUser: (state, action) => {\r\n            const { id } = action.payload\r\n            const existingUser = state.find(user => user.id === id)\r\n            if(existingUser){\r\n                return state.filter(user => user.id !== id)\r\n            }\r\n        },\r\n        sortingUser : (state, action) => {\r\n         if( 'ASC' === action.payload ){\r\n            console.log('Ascending Done');\r\n            console.log(initialState);\r\n            const sorted = [...initialState].sort((a,b) =>\r\n                (a.username.toLowerCase() > b.username.toLowerCase()) ? 1 : -1\r\n            )\r\n            \r\n            initialState = sorted\r\n            console.log(initialState);\r\n        }\r\n        \r\n    }}\r\n})\r\n\r\nexport default userSlice.reducer\r\n\r\nexport const { addUser, editUser, deleteUser, updateUser, sortingUser } = userSlice.actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAIC,YAAY,GAAG,CAAC;EAChBC,EAAE,EAAC,GADa;EAEhBC,QAAQ,EAAC,UAFO;EAGhBC,IAAI,EAAC,aAHW;EAIhBC,MAAM,EAAC,QAJS;EAKhBC,QAAQ,EAAC,KALO;EAMhBC,eAAe,EAAC,KANA;EAOhBC,IAAI,EAAC,OAPW;EAQhBC,KAAK,EAAC;AARU,CAAD,CAAnB;AAWA,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC1BW,IAAI,EAAC,OADqB;EAE1BV,YAF0B;EAG1BW,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAHK;IAINC,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC3B,MAAM;QAAEb,EAAF;QAAMC,QAAN;QAAgBC,IAAhB;QAAsBC,MAAtB;QAA8BC,QAA9B;QAAwCC,eAAxC;QAAyDC,IAAzD;QAA+DC;MAA/D,IAAyEM,MAAM,CAACE,OAAtF;MACA,MAAME,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACnB,EAAL,KAAYA,EAA/B,CAArB;;MACA,IAAGiB,YAAH,EAAgB;QACZA,YAAY,CAAChB,QAAb,GAAwBA,QAAxB;QACAgB,YAAY,CAACf,IAAb,GAAoBA,IAApB;QACAe,YAAY,CAACd,MAAb,GAAsBA,MAAtB;QACAc,YAAY,CAACb,QAAb,GAAwBA,QAAxB;QACAa,YAAY,CAACZ,eAAb,GAA+BA,eAA/B;QACAY,YAAY,CAACX,IAAb,GAAoBA,IAApB;QACAW,YAAY,CAACV,KAAb,GAAqBA,KAArB;MACH;IAEJ,CAjBK;IAkBNa,UAAU,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC3B,MAAM;QAAEb;MAAF,IAASa,MAAM,CAACE,OAAtB;MACA,MAAME,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACnB,EAAL,KAAYA,EAA/B,CAArB;;MACA,IAAGiB,YAAH,EAAgB;QACZ,OAAOL,KAAK,CAACS,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACnB,EAAL,KAAYA,EAAjC,CAAP;MACH;IACJ,CAxBK;IAyBNsB,WAAW,EAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAChC,IAAI,UAAUA,MAAM,CAACE,OAArB,EAA8B;QAC3BQ,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACAD,OAAO,CAACC,GAAR,CAAYzB,YAAZ;QACA,MAAM0B,MAAM,GAAG,CAAC,GAAG1B,YAAJ,EAAkB2B,IAAlB,CAAuB,CAACC,CAAD,EAAGC,CAAH,KACjCD,CAAC,CAAC1B,QAAF,CAAW4B,WAAX,KAA2BD,CAAC,CAAC3B,QAAF,CAAW4B,WAAX,EAA5B,GAAwD,CAAxD,GAA4D,CAAC,CADlD,CAAf;QAIA9B,YAAY,GAAG0B,MAAf;QACAF,OAAO,CAACC,GAAR,CAAYzB,YAAZ;MACH;IAEJ;EArCS;AAHgB,CAAD,CAA7B;AA2CA,eAAeS,SAAS,CAACsB,OAAzB;AAEA,OAAO,MAAM;EAAEnB,OAAF;EAAWoB,QAAX;EAAqBX,UAArB;EAAiCJ,UAAjC;EAA6CM;AAA7C,IAA6Dd,SAAS,CAACwB,OAA7E"},"metadata":{},"sourceType":"module"}